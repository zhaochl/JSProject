
<!DOCTYPE html>
<!--[if IEMobile 7 ]><html class="no-js iem7"><![endif]-->
<!--[if lt IE 9]><html class="no-js lte-ie8"><![endif]-->
<!--[if (gt IE 8)|(gt IEMobile 7)|!(IEMobile)|!(IE)]><!--><html class="no-js" lang="en"><!--<![endif]-->
<head>
  <meta charset="utf-8">
  <title>使用Node.js和Redis实现push服务 - 彭琪谈编程</title>
  <meta name="author" content="彭琪">

  
  <meta name="description" content="push服务是一项很有用处的技术，它能改善交互，提升用户体验。要实现这项服务通常有两种途径，轮询和长连接。轮询就是客户端每隔一段时间就问服务器拿新数据，实现起来很简单但是服务器压力很大，而且大部分请求因为没有新数据都显得很浪费。长连接则是服务器将一个请求挂起，不输出任何内容， &hellip;">
  

  <!-- http://t.co/dKP3o1e -->
  <meta name="HandheldFriendly" content="True">
  <meta name="MobileOptimized" content="320">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  
  <link rel="canonical" href="http://blog.pengqi.me/2012/12/30/implement-push-service-using-node.js-and-redis/">
  <link href="/favicon.png" rel="icon">
  <link href="/stylesheets/screen.css" media="screen, projection" rel="stylesheet" type="text/css">
  <script src="/javascripts/modernizr-2.0.js"></script>
  <script src="/javascripts/ender.js"></script>
  <script src="/javascripts/octopress.js" type="text/javascript"></script>
  <link href="http://feeds.feedburner.com/pengqi/UYPL" rel="alternate" title="彭琪谈编程" type="application/atom+xml">
  <!--Fonts from Google"s Web font directory at http://google.com/webfonts -->
<link href="http://fonts.googleapis.com/css?family=PT+Serif:regular,italic,bold,bolditalic" rel="stylesheet" type="text/css">
<link href="http://fonts.googleapis.com/css?family=PT+Sans:regular,italic,bold,bolditalic" rel="stylesheet" type="text/css">

  
  <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-22399020-1']);
    _gaq.push(['_trackPageview']);

    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
  </script>


</head>

<body   >
  <header role="banner"><hgroup>
  <h1><a href="/">彭琪谈编程</a></h1>
  
    <h2>编程、web、学习...</h2>
  
</hgroup>

</header>
  <nav role="navigation"><ul class="subscription" data-subscription="rss">
  <li><a href="http://feeds.feedburner.com/pengqi/UYPL" rel="subscribe-rss" title="subscribe via RSS">RSS</a></li>
  
</ul>
  
<form action="http://google.com/search" method="get">
  <fieldset role="search">
    <input type="hidden" name="q" value="site:blog.pengqi.me" />
    <input class="search" type="text" name="q" results="0" placeholder="Search"/>
  </fieldset>
</form>
  
<ul class="main-navigation">
  <li><a href="/">Blog</a></li>
  <li><a href="/blog/archives">Archives</a></li>
</ul>

</nav>
  <div id="main">
    <div id="content">
      <div>
<article class="hentry" role="article">
  
  <header>
    
      <h1 class="entry-title">使用Node.js和Redis实现push服务</h1>
    
    
      <p class="meta">
        








  


<time datetime="2012-12-30T00:00:00+08:00" pubdate data-updated="true">2012-12-30</time>
        
      </p>
    
  </header>


<div class="entry-content"><p>push服务是一项很有用处的技术，它能改善交互，提升用户体验。要实现这项服务通常有两种途径，轮询和长连接。轮询就是客户端每隔一段时间就问服务器拿新数据，实现起来很简单但是服务器压力很大，而且大部分请求因为没有新数据都显得很浪费。长连接则是服务器将一个请求挂起，不输出任何内容，直到有新数据产生后才会完成这个请求，浏览器收到响应后则马上再发一个又让服务器挂住，如此反复。这么做的好处是能节省很多无用的请求，但是它不能使用传统的服务端软件，比如apache和php-fpm，客户端多了的话很容易把所有进程占光，这样服务器就没法响应新的请求了。</p>

<!--more-->


<p>Node.js让这一切变得简单，它是基于事件和非阻塞I/O的服务器技术，能使用极少的资源响应大量并发的请求，非常适合长连接的要求。但是这样做还存在两个问题。首先你的服务端通常是用另外一套语言和框架做的，有成熟的代码和业务逻辑，为了实现这个push功能，难道又要用javascript来写一套吗？维护起来不嫌麻烦？其次，服务端把请求挂起后，也是不断地重复调用其它服务来获取新数据，这不过是把轮询的代码换个位置而已，本质上没区别，对服务器一样有压力。</p>

<p>有没有什么简单的办法来实现高效的push呢？</p>

<p>答案是有，而且很简单，所需代码不超过20行！</p>

<p>首先我们借助Redis的<a href="http://redis.io/topics/pubsub">Pub/Sub</a>功能来实现真正的push，其次用JSON来作为客户端和服务端沟通的数据格式。</p>

<p>当Node.js收到请求后，我们将请求挂起，同时实例化一个Redis<a href="https://github.com/simplegeo/nodejs-redis">客户端</a>，并根据请求里的参数来收听一个特定的频道，原有的服务端代码（比如PHP）处理完业务逻辑后，将新数据用JSON封装下发布到这个频道，Node.js收到消息后将其作为响应传给客户端，这样就完成了一次push。代码如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">http</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;http&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;url&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">redis</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;redis&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">query</span> <span class="o">=</span> <span class="nx">url</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">url</span><span class="p">,</span> <span class="kc">true</span><span class="p">).</span><span class="nx">query</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">query</span><span class="p">.</span><span class="nx">channel</span> <span class="o">==</span> <span class="s1">&#39;undefined&#39;</span><span class="p">){</span>
</span><span class='line'>        <span class="nx">res</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="s1">&#39;text/plain&#39;</span><span class="p">});</span>
</span><span class='line'>        <span class="nx">res</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="s1">&#39;Invalid Request\n&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">client</span> <span class="o">=</span> <span class="nx">redis</span><span class="p">.</span><span class="nx">createClient</span><span class="p">(</span><span class="mi">6379</span><span class="p">,</span> <span class="s1">&#39;127.0.0.1&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="nx">client</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">query</span><span class="p">.</span><span class="nx">channel</span><span class="p">);</span>
</span><span class='line'>        <span class="nx">client</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;message&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">channel</span><span class="p">,</span> <span class="nx">message</span><span class="p">){</span>
</span><span class='line'>            <span class="nx">res</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="s1">&#39;application/json&#39;</span><span class="p">});</span>
</span><span class='line'>            <span class="nx">res</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="nx">message</span><span class="p">);</span>
</span><span class='line'>            <span class="nx">client</span><span class="p">.</span><span class="nx">unsubscribe</span><span class="p">();</span>
</span><span class='line'>            <span class="nx">client</span><span class="p">.</span><span class="nx">end</span><span class="p">();</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}).</span><span class="nx">listen</span><span class="p">(</span><span class="mi">1337</span><span class="p">,</span> <span class="s1">&#39;127.0.0.1&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>这个方法简单易用，你只需要定好一个频道和数据关系的协议，然后对现有代码做些简单修改，就能实现一个高效的push服务了！</p>
</div>


  <footer>
    <p class="meta">
      
  

<span class="byline author vcard">Posted by <span class="fn">彭琪</span></span>

      








  


<time datetime="2012-12-30T00:00:00+08:00" pubdate data-updated="true">2012-12-30</time>
      

<span class="categories">
  
    <a class='category' href='/blog/categories/web/'>web</a>
  
</span>


    </p>
    
      <div class="sharing">
  
  
  
</div>

    
    <p class="meta">
      
        <a class="basic-alignment left" href="/2012/12/09/learn-reinventing-wheels/" title="Previous Post: 学习造轮子">&laquo; 学习造轮子</a>
      
      
        <a class="basic-alignment right" href="/2013/01/06/wordpress-to-octopress/" title="Next Post: 迁移到Octopress">迁移到Octopress &raquo;</a>
      
    </p>
  </footer>
</article>

  <section>
    <h1>Comments</h1>
    <div id="disqus_thread" aria-live="polite"><noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
</div>
  </section>

</div>

<aside class="sidebar">
  
    <section>
  <h1>Recent Posts</h1>
  <ul id="recent_posts">
    
      <li class="post">
        <a href="/2014/07/18/mobile-webkit-position-fixed-bug/">一个移动端webkit浏览器的bug</a>
      </li>
    
      <li class="post">
        <a href="/2014/07/18/force-ie-redraw/">强制IE重绘</a>
      </li>
    
      <li class="post">
        <a href="/2013/04/20/remote-addr-and-x-forwarded-for/">怎样正确设置remote_addr和x_forwarded_for</a>
      </li>
    
      <li class="post">
        <a href="/2013/04/19/cacti-templates/">整理Cacti模板</a>
      </li>
    
      <li class="post">
        <a href="/2013/01/09/check-discuz-spam/">扫描discuz里的垃圾帖</a>
      </li>
    
  </ul>
</section>






  
</aside>


    </div>
  </div>
  <footer role="contentinfo"><p>
  Copyright &copy; 2014 - 彭琪 -
  <span class="credit">Powered by <a href="http://octopress.org">Octopress</a> & <a href="https://stdyun.com">Stdyun</a></span>
</p>

</footer>
  

<script type="text/javascript">
      var disqus_shortname = 'pengqi-me';
      
        
        // var disqus_developer = 1;
        var disqus_identifier = 'http://blog.pengqi.me/2012/12/30/implement-push-service-using-node.js-and-redis/';
        var disqus_url = 'http://blog.pengqi.me/2012/12/30/implement-push-service-using-node.js-and-redis/';
        var disqus_script = 'embed.js';
      
    (function () {
      var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
      dsq.src = 'http://' + disqus_shortname + '.disqus.com/' + disqus_script;
      (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    }());
</script>







  <script type="text/javascript">
    (function(){
      var twitterWidgets = document.createElement('script');
      twitterWidgets.type = 'text/javascript';
      twitterWidgets.async = true;
      twitterWidgets.src = 'http://platform.twitter.com/widgets.js';
      document.getElementsByTagName('head')[0].appendChild(twitterWidgets);
    })();
  </script>





</body>
</html>
